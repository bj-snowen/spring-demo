<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <mvc:annotation-driven />
    <!--<context:annotation-config />-->
    <!-- 把标记了@Controller注解的类转换为bean -->
    <context:component-scan base-package="com.vdrips.test.freemarker" />

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">-->
        <!--<property name="order" value="0"/>-->
        <!--<property name="useNotAcceptableStatusCode" value="true"/>-->
        <!--<property name="contentNegotiationManager">-->
            <!--<bean class="org.springframework.web.accept.ContentNegotiationManager">-->
                <!--<constructor-arg>-->
                    <!--<bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">-->
                        <!--<constructor-arg>-->
                            <!--<map>-->
                                <!--<entry key="html" value="text/html"/>-->
                                <!--<entry key="jsp" value="text/html"/>-->
                                <!--<entry key="json" value="application/json"/>-->
                                <!--<entry key="jsonp" value="application/javascript"/>-->
                                <!--<entry key="xml" value="application/xml"/>-->
                            <!--</map>-->
                        <!--</constructor-arg>-->
                    <!--</bean>-->
                <!--</constructor-arg>-->
            <!--</bean>-->
        <!--</property>-->
        <!--<property name="defaultViews">-->
            <!--<list>-->
                <!--<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"></bean>-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="viewResolvers">-->
            <!--<list>-->
                <!--<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">-->
                    <!--<property name="cache" value="false"/>-->
                    <!--<property name="order" value="0"/>-->
                    <!--<property name="prefix" value="/"/>-->
                    <!--<property name="suffix" value=".ftl"/>-->
                    <!--<property name="contentType" value="text/html"/>-->
                    <!--<property name="exposeSpringMacroHelpers" value="true"/>-->
                    <!--<property name="requestContextAttribute" value="rc"/>-->
                    <!--<property name="exposeSessionAttributes" value="true"/>-->
                    <!--<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>-->
                <!--</bean>-->
                <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
                    <!--<property name="contentType" value="text/html"/>-->
                    <!--<property name="order" value="100"/>-->
                    <!--<property name="prefix" value="/WEB-INF/jsp/"/>-->
                    <!--<property name="suffix" value=".jsp"/>-->
                <!--</bean>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->


    <!-- 根据客户端的不同的请求决定不同的view进行响应, 如 http://www.sxrczx.com/rest.json http://www.sxrczx.com/rest.xml -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <!-- 设置为true以忽略对Accept Header的支持 默认就是false -->
        <property name="ignoreAcceptHeader" value="true"/>
        <!-- 在没有扩展名时即: "http://www.sxrczx.com/rest" 时的默认展现形式 -->
        <!-- 如果所有的mediaType都没匹配上，就会使用defaultContentType -->
        <property name="defaultContentType" value="text/html"/>
        <!--这里是视图解析器的执行顺序，0优先级最高-->
        <property name="order" value="1" />
        <!--
        这里是是否启用扩展名支持默认就是true
        例如  /user/{userid}.json
        -->
        <property name="favorPathExtension" value="true"/>

        <!-- 扩展名至mimeType的映射,即 http://www.sxrczx.com/rest.json 映射为 application/json -->
        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json" />
                <entry key="xml" value="application/xml" />
            </map>
        </property>
        <!-- 是否启用参数支持，默认就是true 用于开启 http://www.sxrczx.com/rest?format=json 的支持 -->
        <property name="favorParameter" value="false"/>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="contentType" value="text/html"/>
                    <property name="order" value="10"/>
                    <property name="prefix" value="/WEB-INF/jsp/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <!-- json格式数据支持 -->
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
                <!-- xml 格式数据支持 -->
                <!--<bean class="org.springframework.web.servlet.view.xml.MarshallingView" >-->
                    <!--<property name="marshaller">-->
                        <!--<bean class="org.springframework.oxm.xstream.XStreamMarshaller"/>-->
                    <!--</property>-->
                <!--</bean>-->
            </list>
        </property>
    </bean>

    <!-- Freemarker 视图解析器-->
    <bean id="freeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true" />
        <property name="order" value="100" />
        <property name="prefix" value="" />
        <property name="suffix" value=".ftl" />
        <property name="contentType" value="text/html;charset=utf-8" />
        <!-- 把contextPath暴露给freemaker，前端可以通过￥{request.getContextPath()} 来获取上下文路径
        <property name="requestContextAttribute" value="request"/>
        -->
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
    </bean>
    <!-- ftl(Freemarker) 参数配置 -->
    <bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <!--<property name="location" value="classpath:freemarker.properties"/>-->
    </bean>
    <!--<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
        <!--<property name="defaultEncoding" value="utf-8"/>-->
        <!--<property name="templateLoaderPath" value="/WEB-INF/views"/>-->
        <!--<property name="freemarkerSettings" ref="freemarkerConfiguration"/>-->
    <!--</bean>-->
</beans>