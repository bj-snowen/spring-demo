<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">

    <task:executor id="taskExecutor" pool-size="9-12" queue-capacity="128"/>

    <!--对象消息转换-->
    <bean id="jsonMessageConverter" class="com.vdrips.test.springrmq.util.FastJsonMessageConverter"></bean>

    <!--配置connection-factory，指定连接rabbit server参数 -->
    <rabbit:connection-factory id="connectionFactory" host="${rabbitmq.host}" username="${rabbitmq.username}"
                               password="${rabbitmq.password}" port="${rabbitmq.port}"/>

    <!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
    <rabbit:admin connection-factory="connectionFactory"/>

    <!--定义消息传递的 交换机和队列 配对使用 可以定义多个-->
    <!--测试rabbitmq消息通道 交换机名称 队列-->
    <!--++++++++++++++++++++++++++-->
    <!--定义queue durable:是否持久化 exclusive: 仅创建者可以使用的私有队列，断开后自动删除 auto_delete: 当所有消费客户端连接断开后，是否自动删除队列-->
    <rabbit:queue id="queue_one" durable="true" auto-delete="false" exclusive="false" name="queue_one"/>

    <!-- 消息接收者 -->
    <bean id="queueOneLitener" class="com.vdrips.test.springrmq.service.QueueOneLitener"/>

    <!--++++++++++++++++++++++++++-->

    <rabbit:queue id="queue_two" durable="true" auto-delete="false" exclusive="false" name="queue_two"/>
    <bean id="queueTwoLitener" class="com.vdrips.test.springrmq.service.QueueTwoListner"/>

    <!--++++++++++++++++++++++++++-->

    <!--交换机类型 direct：转发消息到 routigKey 指定的队列。意思就是消息与一个特定的路由键完全匹配，才会转发-->
    <!--topic：按规则转发消息（最灵活* #）。-->
    <!--headers：（这个还没有接触到）-->
    <!--fanout：转发消息到所有绑定队列-->
    <rabbit:direct-exchange name="my-mq-exchange" durable="true" auto-delete="false" id="my-mq-exchange">
        <rabbit:bindings>
            <rabbit:binding queue="queue_one" key="queue_one_key"/>
            <rabbit:binding queue="queue_two" key="queue_two_key"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <rabbit:queue id="queue_three" durable="true" auto-delete="false" exclusive="false" name="queue_three"/>
    <bean id="queueThreeLitener" class="com.vdrips.test.springrmq.service.QueueThreeListner"/>
    <rabbit:fanout-exchange name="my-fanout-exchange" durable="true" auto-delete="false" id="my-fanout-exchange">
        <rabbit:bindings>
            <rabbit:binding queue="queue_three"/>
        </rabbit:bindings>
    </rabbit:fanout-exchange>

    <!--定义rabbit template用于数据的接收和发送 -->
    <rabbit:template id="amqpTemplate" connection-factory="connectionFactory" message-converter="jsonMessageConverter"/>

    <!-- queue litener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 concurrency为每个listener配置并发的消费者个数的 -->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto" concurrency="3" task-executor="taskExecutor">
        <rabbit:listener queues="queue_one" ref="queueOneLitener"/>
        <rabbit:listener queues="queue_two" ref="queueTwoLitener"/>
        <rabbit:listener queues="queue_three" ref="queueThreeLitener"/>
    </rabbit:listener-container>

</beans>